                                            编码与解码
1.在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
  例如：用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。
  decode的作用是将其他编码的字符串转换成unicode编码，，用于加载字节数据到内存中（显示）
  encode的作用是将unicode编码转换成其他编码的字符串， 用于保存数据为字节流到磁盘
  从unicode转str，被看做是把一个信息文本编码为二进制字节流的过程，要用encode方法
                                            高级特性
1.可以直接作用于for循环的对象统称为可迭代对象：Iterable，可以使用isinstance()判断一个对象是否是Iterable对象。
2.可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator，可以使用isinstance()判断一个对象是否是Iterable对象。
3.Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算，所以生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。
4.生成器函数返回的是一个生成器对象，并且只能迭代一次，而列表生成式返回一个序列，内存占用较大。
5.集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象， 再不断调用next(),这也是for循环的本质。
                                           函数式编程
1.map()函数接受两个参数，一个是函数（一个参数），一个是Iteratble，将传入的函数依次作用于序列的每个元素，并把返回值作为一个Iterator(惰性对象），可用list全部取出。
2.reduce()函数接受两个参数，一个是函数（必须接受两个参数），一个是序列。reduce把返回值继续和序列的下一个元素做累积计算。
3.filter()函数用于过滤序列，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。该函数返回一个Iterator(惰性序列)。
4.sorted()是一个高阶函数，用于对序列进行排序，可用key自定义排序映射函数，key指定的函数将作用于序列的每一个元素上，并根据key函数返回的结果进行排序。反向排序可用参数reverse=True。
5.返回函数
6.匿名函数lambda参数：返回值，匿名函数也是一个函数对象，也可以把匿名函数赋值给一个变量，再利用变量来调用该函数。
7.装饰器:在代码运行期间动态增加功能的方式，称之为“装饰器”（Decorator）。本质上，decorator就是一个返回函数的高阶函数。
8.偏函数：把一个函数的某些参数给固定住（也就是设置默认值），返回一个新的函数，调用这个新函数会更简单。
                                            面向对象编程
1.实例变量（数据成员）以__开头的，就是类内部的私有变量，外部不可以访问。
2.子类继承父类之后就获得了父类的全部功能（也可以覆盖父类的同名函数），也可以在此基础上自己增加函数。
3.在类定义的开头定义变量表示类变量，由所有实例共享。
4.__str()__:调用对象时默认调用该方法。
5.__iter__方法返回一个迭代对象，然后，Python的for循环就会不断调用该迭代对象的__next__()方法拿到循环的下一个值，直到遇到StopIteration错误时退出循环。
6.__getitem__方法可以对对象取下标。
7.__getattr__方法动态返回一个属性。
8.__call__方法可以直接对实例进行调用，当调用实例object()时，会自动调用__call__方法。

